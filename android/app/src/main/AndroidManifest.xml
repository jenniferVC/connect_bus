<!-- atributo android:installLocation="preferExternal" é para evitar o erro INSTALL_FAILED_INSUFFICIENT_STORAGE forçando o app ser instalado
no armazenamento externo-->
<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.example.connect_bus" android:installLocation="preferExternal">
    
    <!-- Permissões para acessar a localização de forma precisa -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />

    <!-- Permite o uso de PowerManager WakeLocks para evitar que o processador durma ou a tela escureça. -->
    <!-- <uses-permission android:name="android.permission.WAKE_LOCK" /> -->

    <!-- Permite que aplicativos abram soquetes de rede. -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- Permite que um aplicativo comum use `Service.startForeground` para a localizaçao. -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_LOCATION" />

    <!-- Acessando a localização mesmo se o usuário deixar o app em segundo plano  -->
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />

    <application android:label="Connect Bus" android:name="${applicationName}" android:icon="@mipmap/launcher_icon">
        <activity android:name=".MainActivity" android:exported="true" android:launchMode="singleTop" android:theme="@style/LaunchTheme" android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode" android:hardwareAccelerated="true" android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data android:name="io.flutter.embedding.android.NormalTheme" android:resource="@style/NormalTheme" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data android:name="flutterEmbedding" android:value="2" />
        <!-- @string/ANDROID_MAPS_APIKEY esta fazendo referencia a variavel do .env-->
        <meta-data android:name="com.google.android.geo.API_KEY" android:value="@string/ANDROID_MAPS_APIKEY"/>
    </application>
</manifest>